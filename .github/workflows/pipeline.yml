name: Pipeline

on:
  push:
    branches: [main]

env:
  ECR_REPO_NAME: junio-test

jobs:
  initialise:
    name: Initialise
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.versioning.outputs.image_tag }}
    steps:
      - name: Setup image version
        id: versioning
        run: |
          IMAGE_TAG=$(date +'%Y.%m.%d').${GITHUB_RUN_NUMBER}
          echo "::set-output name=image_tag::$(eval printf "%s" "$IMAGE_TAG")"

  build-and-deploy:
    name: Build and deploy
    runs-on: ubuntu-latest
    needs: initialise
    env:
      IMAGE_TAG: ${{ needs.initialise.outputs.image_tag }}
    steps:
      - name: Checkout repo
        id: checkout
        uses: actions/checkout@v3

      - name: Setup AWS creds
        id: aws-creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        run: |
          docker build -t $ECR_REPO_NAME:$IMAGE_TAG -f $GITHUB_WORKSPACE/Api/Dockerfile .

      - name: Create ECR repo
        run: |
          aws ecr create-repository --repository-name $ECR_REPO_NAME --region ap-southeast-2 || true

      - name: Tag and push Docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker tag $ECR_REPO_NAME:$IMAGE_TAG $REGISTRY/$ECR_REPO_NAME:$IMAGE_TAG
          docker tag $ECR_REPO_NAME:$IMAGE_TAG $REGISTRY/$ECR_REPO_NAME:latest
          docker push $REGISTRY/$ECR_REPO_NAME --all-tags
